{"ast":null,"code":"var _jsxFileName = \"/Users/khalil/Desktop/updates-master/src/loginButton.js\";\nimport React from 'react';\nimport firebase from 'firebase/compat/app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginButton(_ref) {\n  let {\n    setUser\n  } = _ref;\n\n  // this is auth code for login\n  function logIn() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      console.log(result.user);\n      setUser(result.user);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } //\n\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => logIn(),\n    children: \"Login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LoginButton;\nexport default LoginButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginButton\");","map":{"version":3,"sources":["/Users/khalil/Desktop/updates-master/src/loginButton.js"],"names":["React","firebase","LoginButton","setUser","logIn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","console","log","user","catch","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,SAASC,WAAT,OAAgC;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;;AAE9B;AACA,WAASC,KAAT,GAAiB;AACf,QAAIC,QAAQ,GAAG,IAAIJ,QAAQ,CAACK,IAAT,CAAcC,kBAAlB,EAAf;AACDN,IAAAA,QAAQ,CAACK,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,EAA0CI,IAA1C,CAA+C,UAASC,MAAT,EAAiB;AAC7DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAV,MAAAA,OAAO,CAACO,MAAM,CAACG,IAAR,CAAP;AACD,KAHF,EAGIC,KAHJ,CAGU,UAASC,KAAT,EAAgB;AACvBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACF,KALD;AAMA,GAX6B,CAY9B;;;AACA,sBACE;AAAQ,IAAA,OAAO,EAAE,MAAMX,KAAK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKC;;KAlBMF,W;AAoBT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport firebase from 'firebase/compat/app';\n\nfunction LoginButton({setUser}) {\n\n  // this is auth code for login\n  function logIn() {\n    var provider = new firebase.auth.GoogleAuthProvider(); \n   firebase.auth().signInWithPopup(provider).then(function(result) {\n      console.log(result.user);\n      setUser(result.user);\n    }).catch(function(error) {\n      console.log(error);\n   });\n  }\n  //\n  return (\n    <button onClick={() => logIn()}>\n      Login\n    </button>\n          );\n  }\n\nexport default LoginButton;"]},"metadata":{},"sourceType":"module"}